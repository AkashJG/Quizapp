{"version":3,"sources":["Question.jsx","App.js","index.js"],"names":["Question","question","Q","Qid","A","Ans","iscorrect","useState","currentQ","setcurrentQ","cu","skip","show","dta","className","map","cut","index","right","isSkiped","isWrong","id","answer","onClick","RightQid","Questiontext","Next","length","alert","hndleclick","type","skipid","App","style","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAgKeA,EA/JE,WACf,IAAMC,EAAW,CACf,CACEC,EAAG,qCACHC,IAAK,IACLC,EAAG,CACD,CAAEC,IAAK,eAAgBC,UAAW,SAClC,CAAED,IAAK,cAAeC,UAAW,SACjC,CAAED,IAAK,YAAaC,UAAW,QAC/B,CAAED,IAAK,cAAeC,UAAW,WAGrC,CACEJ,EAAG,8CACHC,IAAK,IACLC,EAAG,CACD,CAAEC,IAAK,UAAWC,UAAW,QAC7B,CAAED,IAAK,YAAaC,UAAW,SAC/B,CAAED,IAAK,YAAaC,UAAW,SAC/B,CAAED,IAAK,KAAMC,UAAW,WAG5B,CACEJ,EAAG,gCACHC,IAAK,IACLC,EAAG,CACD,CAAEC,IAAK,MAAOC,UAAW,SACzB,CAAED,IAAK,WAAYC,UAAW,SAC9B,CAAED,IAAK,WAAYC,UAAW,SAC9B,CAAED,IAAK,UAAWC,UAAW,UAGjC,CACEJ,EAAG,gEACHC,IAAK,IACLC,EAAG,CACD,CAAEC,IAAK,mBAAoBC,UAAW,SACtC,CAAED,IAAK,kBAAmBC,UAAW,SACrC,CAAED,IAAK,cAAeC,UAAW,QACjC,CAAED,IAAK,WAAYC,UAAW,YAvCf,EA4CWC,mBAAS,GA5CpB,mBA4CdC,EA5Cc,KA4CJC,EA5CI,OA6CFF,mBAAS,IA7CP,mBA6CdG,EA7Cc,KA6CVC,EA7CU,OA8CDJ,oBAAS,GA9CR,mBA8CdK,EA9Cc,KA8CRC,EA9CQ,KA2FrB,OAAID,EAEA,qBAAKE,UAAU,YAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,yCACA,kCACE,gCACE,+BACE,0CACA,8CACA,wCACA,4CAGJ,gCACGJ,EAAGK,KAAI,SAACC,EAAKC,GAAN,OACN,+BACE,6BAAKhB,EAASgB,GAAOf,IACrB,6BAAKc,EAAIE,QACT,6BAAKF,EAAIG,WACT,6BAAKH,EAAII,YAJFH,gBAcrB,sBAAKH,UAAU,OAAf,UACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,cAAf,SACE,6BAAKb,EAASO,GAAUN,MAE1B,qBAAKY,UAAU,YAAYO,GAAG,MAA9B,SACGpB,EAASO,GAAUJ,EAAEW,KAAI,SAACO,EAAQL,GAAT,OACxB,sBACEM,QAAS,kBAhEJ,SAACjB,GAEhBK,EAAK,GAAD,mBACCD,GAFW,SAAdJ,EACE,CAEF,CACEkB,SAAUvB,EAASO,GAAUL,IAC7Be,MAAO,IAIP,CAEF,CACEf,IAAKF,EAASO,GAAUL,IACxBsB,aAAcxB,EAASO,GAAUN,EACjCkB,SAAU,MAIhB,IAAMM,EAAOlB,EAAW,EAEpBkB,EAAOzB,EAAS0B,OAAQlB,EAAYiB,GACnCE,MAAM,gBA0CgBC,CAAWP,EAAOhB,YACjCwB,KAAK,SAELhB,UAAU,6CAJZ,SAME,iCAASQ,EAAOjB,OAHXY,aASf,wBACEM,QA3FgB,WACpB,IAAMG,EAAOlB,EAAW,EACxBG,EAAK,GAAD,mBACCD,GADD,CAEF,CACEqB,OAAQ9B,EAASO,GAAUL,IAC3BgB,SAAU,WAIVO,EAAOzB,EAAS0B,OAClBlB,EAAYiB,GACPE,MAAM,iBAgFTd,UAAU,+BACVgB,KAAK,SAHP,kBAOA,wBACEP,QArGY,WAChBV,GAAI,IAqGAC,UAAU,+BACVgB,KAAK,SAHP,wBCxISE,MATf,WACE,OACE,sBAAKlB,UAAU,MAAf,UACE,oBAAImB,MAAO,CAAEC,MAAO,SAApB,wBACA,cAAC,EAAD,QCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ee9c528a.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nconst Question = () => {\r\n  const question = [\r\n    {\r\n      Q: \"Q:1 Current President Of America ?\",\r\n      Qid: \"1\",\r\n      A: [\r\n        { Ans: \"Kamla Harris\", iscorrect: \"false\" },\r\n        { Ans: \"Barak Obama\", iscorrect: \"false\" },\r\n        { Ans: \"Joe Biden\", iscorrect: \"true\" },\r\n        { Ans: \"Jeorge Bush\", iscorrect: \"false\" },\r\n      ],\r\n    },\r\n    {\r\n      Q: \"Q:2 Which one is  not belong to Facebook  ?\",\r\n      Qid: \"2\",\r\n      A: [\r\n        { Ans: \"Twitter\", iscorrect: \"true\" },\r\n        { Ans: \"Whattsapp\", iscorrect: \"false\" },\r\n        { Ans: \"Instagram\", iscorrect: \"false\" },\r\n        { Ans: \"fb\", iscorrect: \"false\" },\r\n      ],\r\n    },\r\n    {\r\n      Q: \" Q:3 Which is OTT Platform  ?\",\r\n      Qid: \"3\",\r\n      A: [\r\n        { Ans: \"Ztv\", iscorrect: \"false\" },\r\n        { Ans: \"Starplus\", iscorrect: \"false\" },\r\n        { Ans: \"National\", iscorrect: \"false\" },\r\n        { Ans: \"Netflix\", iscorrect: \"true\" },\r\n      ],\r\n    },\r\n    {\r\n      Q: \"Q:4 Which Indian Athelete have 100M follower's on Instagram ?\",\r\n      Qid: \"4\",\r\n      A: [\r\n        { Ans: \"Sachin Tendulker\", iscorrect: \"false\" },\r\n        { Ans: \"Herbhazan Singh\", iscorrect: \"false\" },\r\n        { Ans: \"Virat Kholi\", iscorrect: \"true\" },\r\n        { Ans: \"MS Dhoni\", iscorrect: \"false\" },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const [currentQ, setcurrentQ] = useState(0);\r\n  const [cu, skip] = useState([]);\r\n  const [show, dta] = useState(false);\r\n\r\n  const sbmithdlr = () => {\r\n    dta(true);\r\n  };\r\n  const hndlclickskip = () => {\r\n    const Next = currentQ + 1;\r\n    skip([\r\n      ...cu,\r\n      {\r\n        skipid: question[currentQ].Qid,\r\n        isSkiped: \"True\",\r\n      },\r\n    ]);\r\n\r\n    if (Next < question.length) {\r\n      setcurrentQ(Next);\r\n    } else alert(\"Thank You !!\");\r\n  };\r\n\r\n  const hndleclick = (iscorrect) => {\r\n    if (iscorrect === \"true\") {\r\n      skip([\r\n        ...cu,\r\n        {\r\n          RightQid: question[currentQ].Qid,\r\n          right: +1,\r\n        },\r\n      ]);\r\n    } else {\r\n      skip([\r\n        ...cu,\r\n        {\r\n          Qid: question[currentQ].Qid,\r\n          Questiontext: question[currentQ].Q,\r\n          isWrong: -1,\r\n        },\r\n      ]);\r\n    }\r\n    const Next = currentQ + 1;\r\n\r\n    if (Next < question.length) setcurrentQ(Next);\r\n    else alert(\"Thank You !!\");\r\n  };\r\n\r\n  if (show) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"table  table-striped\">\r\n          <h3>Results</h3>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Question</th>\r\n                <th>Right Answer</th>\r\n                <th>Skiped</th>\r\n                <th>Wrong</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {cu.map((cut, index) => (\r\n                <tr key={index}>\r\n                  <td>{question[index].Q}</td>\r\n                  <td>{cut.right}</td>\r\n                  <td>{cut.isSkiped}</td>\r\n                  <td>{cut.isWrong}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"container\">\r\n        <div className=\"card  mb-3\">\r\n          <div className=\"card-header\">\r\n            <h3>{question[currentQ].Q}</h3>\r\n          </div>\r\n          <div className=\"card-body\" id=\"ans\">\r\n            {question[currentQ].A.map((answer, index) => (\r\n              <span\r\n                onClick={() => hndleclick(answer.iscorrect)}\r\n                type=\"button\"\r\n                key={index}\r\n                className=\"btn btn-outline-success  form-control mt-3\"\r\n              >\r\n                <strong>{answer.Ans}</strong>\r\n              </span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        onClick={hndlclickskip}\r\n        className=\"btn btn-outline-primary mx-5\"\r\n        type=\"button\"\r\n      >\r\n        Skip\r\n      </button>\r\n      <button\r\n        onClick={sbmithdlr}\r\n        className=\"btn btn-outline-success mx-5\"\r\n        type=\"button\"\r\n      >\r\n        Submit\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import \"./App.css\";\n\nimport Question from \"./Question\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2 style={{ color: \"brown\" }}>World Quiz</h2>\n      <Question />\n    </div>\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vital\n"],"sourceRoot":""}